service: srvlss-api
frameworkVersion: "3"

custom:
  FilmsTable: "Films"
  PeopleTable: "People"
  PlanetsTable: "Planets"
  SpeciesTable: "Species"
  StarshipsTable: "Starships"
  VehiclesTable: "Vehicles"
  StudentsTable: "Students"
  serverless-offline:
    httpPort: 4000

provider:
  name: aws
  runtime: nodejs14.x
  region: us-east-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - Fn::GetAtt: [FilmsTable, Arn]
            - Fn::GetAtt: [PeopleTable, Arn]
            - Fn::GetAtt: [PlanetsTable, Arn]
            - Fn::GetAtt: [SpeciesTable, Arn]
            - Fn::GetAtt: [StarshipsTable, Arn]
            - Fn::GetAtt: [VehiclesTable, Arn]
            - Fn::GetAtt: [StudentsTable, Arn]
  environment:
    FILMS_TABLE: ${self:custom.FilmsTable}
    PEOPLE_TABLE: ${self:custom.PeopleTable}
    PLANETS_TABLE: ${self:custom.PlanetsTable}
    SPECIES_TABLE: ${self:custom.SpeciesTable}
    STARSHIPS_TABLE: ${self:custom.StarshipsTable}
    VEHICLES_TABLE: ${self:custom.VehiclesTable}
    STUDENTS_TABLE: ${self:custom.StudentsTable}

functions:
  api:
    handler: app.app
    events:
      - httpApi: "*"

resources:
  Resources:
    FilmsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.FilmsTable}
    PeopleTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.PeopleTable}
    PlanetsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.PlanetsTable}
    SpeciesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.SpeciesTable}
    StarshipsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.StarshipsTable}
    VehiclesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.VehiclesTable}
    StudentsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.StudentsTable}

plugins:
  - serverless-offline
